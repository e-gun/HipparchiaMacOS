# this will do a complete macOS installation
# please see below: if you do not have access to the builder input files, you might have a serious problem
# it is an abbreviated and slightly modified version of a FreeBSD installation
# you can cut and paste MOST of the document safely into the terminal
# comments ('# ...') will be ignored
# but there are points where you are required to take action, so pasting the whole document at once would be bad

# open Terminal.app from the /Applications/Utilities folder
 
# from the command line: 

# test that you have the command lines tools available:

gcc

# success - you will see this message: 'clang: error: no input files'
# fail - macOS will attempt to download and install the tools you need to go forward
# if *that* does not work: you manually download XCode from the App Store (for free), install, and try again

# install the brew package manager

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# install python and postgresql

brew install python3
brew install postgresql

# postgresql will be available every time you restart (you almost certainly want this if you plan to use hipparchia regularly)

brew services start postgresql

# ready the installation files and directories
# cut-and-paste this block with abandon

mkdir ~/hipparchia_venv
mkdir ~/hipparchia_venv/HipparchiaData ~/hipparchia_venv/HipparchiaServer ~/hipparchia_venv/HipparchiaSQLoader ~/hipparchia_venv/HipparchiaBuilder ~/hipparchia_venv/HipparchiaBSD
cd ~/hipparchia_venv/HipparchiaServer/ && git init && git pull https://github.com/e-gun/HipparchiaServer.git
cd ~/hipparchia_venv/HipparchiaBuilder/ && git init && git pull https://github.com/e-gun/HipparchiaBuilder.git
cd ~/hipparchia_venv/HipparchiaSQLoader/ && git init && git pull https://github.com/e-gun/HipparchiaSQLoader.git
cd ~/hipparchia_venv/HipparchiaBSD/ && git init && git pull https://github.com/e-gun/HipparchiaBSD.git
cp ~/hipparchia_venv/HipparchiaBSD/macOS_selfupdate.sh ~/hipparchia_venv/selfupdate.sh
chmod 700 ~/hipparchia_venv/selfupdate.sh
cp -rp ~/hipparchia_venv/HipparchiaBSD/macos_launch_hipparchia_application.app ~/hipparchia_venv/launch_hipparchia.app

# build the db framework

createdb -E UTF8 hipparchiaDB
psql -d hipparchiaDB -a -f ~/hipparchia_venv/HipparchiaBuilder/builder/sql/sample_generate_hipparchia_dbs.sql

# YOU ARE ABOUT TO ENTER THE SQL SHELL: time to sit up and take notice of these comments

psql hipparchiaDB

# this next bit can't be done with cut-and-paste: YOU HAVE TO READ AND FOLLOW THE INSTRUCTIONS
#
#	[set two different passwords for your two different DB roles: please pick strong/hard gibberish passwords like "IQY%gOd$)&KV" and "~=#ThR05D3" ]
#	\password hippa_wr
#	\password hippa_rd
#	\q

# now you can get back to lazy cut-and-paste briefly
# prepare the python virtual environment

/usr/local/bin/python3.6 -m venv ~/hipparchia_venv/
source ~/hipparchia_venv/bin/activate
~/hipparchia_venv/bin/pip3 install bs4 flask psycopg2 websockets

cp ~/hipparchia_venv/HipparchiaBuilder/sample_config.ini ~/hipparchia_venv/HipparchiaBuilder/config.ini
cp ~/hipparchia_venv/HipparchiaServer/sample_config.py ~/hipparchia_venv/HipparchiaServer/config.py

# this next bit can't be done with cut-and-paste: YOU HAVE TO READ AND FOLLOW THE INSTRUCTIONS
# edit your configuration files: the passwords for hippa_wr and hippa_rd are the key bit ('DBPASS')
# they must match what you entered after you did '\password hippa_wr' and '\password hippa_rd' above
# you should also have a long and strong value ready for 'SECRET_KEY' in config.py.

# WARNING TextEdit (and not just TextEdit) might try to put ‘smart quotes’ around items. 
# Do not let this happen: straight quotes are right, curly ones are wrong: 'smart' and not ‘smart’.

open -a /Applications/TextEdit.app ~/hipparchia_venv/HipparchiaServer/config.py
open -a /Applications/TextEdit.app ~/hipparchia_venv/HipparchiaBuilder/config.ini
open -a /Applications/TextEdit.app ~/hipparchia_venv/HipparchiaSQLoader/config.ini
cp ~/hipparchia_venv/HipparchiaBuilder/config.ini ~/hipparchia_venv/HipparchiaSQLoader/config.ini

# now we can cut-and-paste again
# [install jquery, fonts, etc. in ~/hipparchia_venv/HipparchiaServer/server/static/]

curl https://code.jquery.com/jquery-3.1.0.min.js > ~/hipparchia_venv/HipparchiaServer/server/static/jquery.min.js
curl https://raw.githubusercontent.com/js-cookie/js-cookie/master/src/js.cookie.js > ~/hipparchia_venv/HipparchiaServer/server/static/js.cookie.js
curl -LOk https://github.com/dejavu-fonts/dejavu-fonts/releases/download/version_2_37/dejavu-fonts-ttf-2.37.tar.bz2 > ~/hipparchia_venv/HipparchiaServer/server/static/dejavu-fonts-ttf-2.37.tar.bz2
curl -LOk http://jqueryui.com/resources/download/jquery-ui-1.12.1.zip ~/hipparchia_venv/HipparchiaServer/server/static/jquery-ui-1.12.1.zip
cd ~/hipparchia_venv/HipparchiaServer/server/static/
tar jxf ~/hipparchia_venv/HipparchiaServer/server/static/dejavu-fonts-ttf-2.37.tar.bz2
cp ~/hipparchia_venv/HipparchiaServer/server/static/dejavu-fonts-ttf-2.37/ttf/*.ttf ~/hipparchia_venv/HipparchiaServer/server/static/ttf/
unzip ~/hipparchia_venv/HipparchiaServer/server/static/jquery-ui-1.12.1.zip
cp ~/hipparchia_venv/HipparchiaServer/server/static/jquery-ui-1.12.1/jquery-ui* ~/hipparchia_venv/HipparchiaServer/server/static/
cp ~/hipparchia_venv/HipparchiaServer/server/static/jquery-ui-1.12.1/images/*.png ~/hipparchia_venv/HipparchiaServer/server/static/images/
rm -rf ~/hipparchia_venv/HipparchiaServer/server/static/dejavu-fonts-ttf-2.37.tar.bz2 ~/hipparchia_venv/HipparchiaServer/server/static/jquery-ui-1.12.1.zip ~/hipparchia_venv/HipparchiaServer/server/static/jquery-ui-1.12.1/ ~/hipparchia_venv/HipparchiaServer/server/static/dejavu-fonts-ttf-2.37/

# here comes the SHOWSTOPPER moment if you are going to be a HipparchiaBuilder
# IF YOU DO NOT HAVE ACCESS TO THE DATA, THEN YOU CAN'T BUILD
# and this data is not available on github and unlikely ever to be available on github
# You need access to the TLG_E and PHI00005 and PHI7 disks. Get your hands on them.
# I do not know if other versions will build. They probably will. 
#
# NOTE: HipparchiaServer can and will run just fine with 0 languages and lexica actually installed. 
# Just don't expect to find anything in an empty database. 
# You probably want more than nothing. But there is no need to install more than you will use. 
# If you only install Latin literature, you will only be presented with Latin as a search option.
 
# OPTION ONE: BE BUILDER

# make the datafiles available where config.ini says they will be

# the lexica and grammatical analyses are not officially available anywhere that I know of. This material used to be distributed via the Perseus Hopper. No more?
# 
# BUILDING - ACQUIRING THE LEXICA OPTION A:
# use the files inside of Diogenes
mkdir ~/hipparchia_venv/HipparchiaData/lexica/
curl https://community.dur.ac.uk/p.j.heslin/Software/Diogenes/Download/diogenes-linux-3.2.0.tar.bz2 > ~/hipparchia_venv/HipparchiaData/lexica/diogenes-linux-3.2.0.tar.bz2
cd ~/hipparchia_venv/HipparchiaData/lexica/
tar jxf diogenes-linux-3.2.0.tar.bz2
mv ~/hipparchia_venv/HipparchiaData/lexica/diogenes-3.2.0/diogenes/perl/Perseus_Data/*.* ~/hipparchia_venv/HipparchiaData/lexica/
rm -rf ~/hipparchia_venv/HipparchiaData/lexica/diogenes-3.2.0/
mv ~/hipparchia_venv/HipparchiaData/lexica/1999.04.0057.xml ~/hipparchia_venv/HipparchiaData/lexica/greek-lexicon_1999.04.0057.xml
mv ~/hipparchia_venv/HipparchiaData/lexica/1999.04.0059.xml ~/hipparchia_venv/HipparchiaData/lexica/latin-lexicon_1999.04.0059.xml

# BUILDING - ACQUIRING THE LEXICA OPTION B [incomplete data / no Latin items]: 
# TLG:
# curl -LOk https://raw.githubusercontent.com/cltk/greek_lexica_perseus/master/greek_english_lexicon_lsj_1.xml > ~/hipparchia_venv/HipparchiaData/lexica/greek_english_lexicon_lsj_1.xml
# curl -LOk https://raw.githubusercontent.com/cltk/greek_lexica_perseus/master/greek_english_lexicon_lsj_2.xml > ~/hipparchia_venv/HipparchiaData/lexica/greek_english_lexicon_lsj_2.xml
# LEMMATA
# curl -LOk https://raw.githubusercontent.com/cltk/greek_lexica_perseus/master/greek-lemmata.txt > ~/hipparchia_venv/HipparchiaData/lexica/greek-lemmata.txt 
# ANALYSES
# curl -LOk https://raw.githubusercontent.com/cltk/greek_lexica_perseus/master/greek-analyses_1.txt > ~/hipparchia_venv/HipparchiaData/lexica/greek-analyses_1.txt
# curl -LOk https://raw.githubusercontent.com/cltk/greek_lexica_perseus/master/greek-analyses_2.txt > ~/hipparchia_venv/HipparchiaData/lexica/greek-analyses_2.txt

# if you have the builder data all properly in place, then...

cd ~/hipparchia_venv/HipparchiaBuilder && ~/hipparchia_venv/bin/python3 ./makecorpora.py

# build times vary, but 10-40m per corpus should be possible on most machines. 
# 5-25m is achievable if you are a speed freak who knows how to optimize for your rig

# OPTION TWO: BE A RELOADER
# if you have access to a HipparchiaSQLoader dump, then...

# cd ~/hipparchia_venv/HipparchiaSQLoader/ && ../bin/python ./reloadhipparchiaDBs.py 

# CONGRATULATIONS: Hipparchia's data has been installed
# you are now ready to run HipparchiaServer 

# OPTION ONE: via the Terminal.app:

# ~/hipparchia_venv/bin/python3 ~/hipparchia_venv/HipparchiaServer/run.py

# OPTION TWO: via the supplied applescript script: you can double-click it or tell the terminal the following

open ~/hipparchia_venv/launch_hipparchia.app

# you can move launch_hipparchia.app anywhere you want
# you can't move ~/hipparchia_venv unless you are willing to tinker with various settings

# after launching you should see something like:

#loading all authors...
#	 3455 authors loaded
#loading all works...
#	 235461 works loaded
#building specialized sublists
# * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
# * Restarting with stat

# if you love the command line then:

open http://localhost:5000

# otherwise you can open any web browser and surf to Hipparchia's front page:
# 	http://localhost:5000
# consider bookmarking it

# WARNING
# HipparchiaServer is a server; and you are now serving on port 5000.
#
# You are serving to ANYONE ANYWHERE in the world unless you are either
# behind a firewall or are going to manually block access to this port to outsiders 
# I cannot recommend strongly enough that you have some sort of protection for 
# this port on your machine.
#
# There are plenty of security checks inside HipparchiaServer, but if you just chose to 
# skip a critical piece of the security puzzle, then I refuse to feel that bad if I missed something 
# in my code. You did not do your part either.
#
# If you have no firewall and picked a terrible password for hippa_wr, then you
# must be the sort of person who loves international adventure and fun games like
# running with scissors. They play the coolest kind of roulette in Russia, I am told.

# postgresql is also a server, and it does not need to grant access to anyone other than localhost 
# if anyone other than localhost can get to you at port 5432 then something is misconfigured
# postgresql.conf is supposed to set: listen_addresses = 'localhost' 
# i.e., firewalling postgresql is superfluous because it should reject everyone anyway. But feel
# free to firewall it too. All ports that do not have to be open should be kept closed.

# KEEPING UP TO DATE:
# 	from the terminal run
# 	~/hipparchia_venv/selfupdate.sh
# 
# WARNING
# HipparchiaServer and HipparchiaBuilder are both in active development 
# It is possible that the latest version of HipparchiaServer requires DBs built with 
# a version of HipparchiaBuilder that did not build the DBs you have installed
#
# in short an update can BREAK your installation unless you have access to the build data or freshly built DBs
# HipparchiaServer will tell you if your data is not a match, but only after you have loaded it: i.e. after you have done something you might regret
# you can use github to pull any version of Hipparchia ever, so reversion is definitely possible, just not very fun/easy
# the data mismatch warning should give you some idea of where to pick as a reversion date in the code history 
#
# the data template should stabilize 'eventually': at the moment it seldom changes; I hope to turn that into 'never'


